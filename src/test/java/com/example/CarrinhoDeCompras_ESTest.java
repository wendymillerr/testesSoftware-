/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 12 19:52:36 GMT 2024
 */

package com.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.CarrinhoDeCompras;
import com.example.Produto;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarrinhoDeCompras_ESTest extends CarrinhoDeCompras_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      carrinhoDeCompras0.adicionarProduto((Produto) null);
      Produto produto0 = carrinhoDeCompras0.getPrimeiroProduto();
      assertNull(produto0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto((String) null, 605.7849802, 3016);
      carrinhoDeCompras0.adicionarProduto(produto0);
      Produto produto1 = carrinhoDeCompras0.getPrimeiroProduto();
      assertEquals(605.7849802, produto1.getPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("", 0, 0);
      carrinhoDeCompras0.adicionarProduto(produto0);
      Produto produto1 = carrinhoDeCompras0.getPrimeiroProduto();
      assertEquals(0, produto1.getQuantidade());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("i", (-1229), (-1229));
      carrinhoDeCompras0.adicionarProduto(produto0);
      Produto produto1 = carrinhoDeCompras0.getPrimeiroProduto();
      assertEquals("i", produto1.getNome());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("`,bOscp2XN]", 1247.5523928115, (-486));
      carrinhoDeCompras0.adicionarProduto(produto0);
      Produto produto1 = carrinhoDeCompras0.getPrimeiroProduto();
      assertEquals((-606310.462906389), produto1.calcularValorTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto((String) null, 605.7849802, 3016);
      carrinhoDeCompras0.adicionarProduto(produto0);
      int int0 = carrinhoDeCompras0.getNumeroDeProdutos();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("x,N5", (-1.0), 2218);
      carrinhoDeCompras0.adicionarProduto(produto0);
      double double0 = carrinhoDeCompras0.calcularTotal();
      assertEquals((-2218.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      carrinhoDeCompras0.adicionarProduto((Produto) null);
      // Undeclared exception!
      try { 
        carrinhoDeCompras0.calcularTotal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.CarrinhoDeCompras", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      double double0 = carrinhoDeCompras0.calcularTotal();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      int int0 = carrinhoDeCompras0.getNumeroDeProdutos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      // Undeclared exception!
      try { 
        carrinhoDeCompras0.getPrimeiroProduto();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("i", (-1229), (-1229));
      carrinhoDeCompras0.removerProduto(produto0);
      assertEquals(0, carrinhoDeCompras0.getNumeroDeProdutos());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CarrinhoDeCompras carrinhoDeCompras0 = new CarrinhoDeCompras();
      Produto produto0 = new Produto("i", (-1229), (-1229));
      carrinhoDeCompras0.adicionarProduto(produto0);
      double double0 = carrinhoDeCompras0.calcularTotal();
      assertEquals(1510441.0, double0, 0.01);
  }
}
